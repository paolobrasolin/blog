name: Publish

on:
  push:
    branches:
      - jekyll
  schedule:
    - cron: '0 0 * * *'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.7

    - name: Cache Ruby gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: gems-${{ hashFiles('Gemfile.lock') }}
        restore-keys: gems-

    - name: Install Ruby gems
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Cache TeXLive distribution
      uses: actions/cache@v2
      id: cache-texlive
      with:
        path: ${{ runner.tool_cache }}/texlive
        key: texlive-${{ hashFiles('.github/texlive.*') }}
        restore-keys: texlive-

    - name: Install TeXLive (infraonly)
      if: steps.cache-texlive.outputs.cache-hit != 'true'
      env:
        TEXLIVE_INSTALL_PREFIX: ${{ runner.tool_cache }}/texlive
        TEXLIVE_PROFILE_PATH: ${{ github.workspace }}/.github/texlive.profile
      run: |
        cd ${{ runner.temp }}
        wget -q http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
        tar -xzf install-tl-unx.tar.gz
        cd install-tl-20* || exit 1
        ./install-tl --portable --profile="$TEXLIVE_PROFILE_PATH"
        echo "::add-path::$TEXLIVE_INSTALL_PREFIX/bin/x86_64-linux"

    - name: Install TeXLive packages
      if: steps.cache-texlive.outputs.cache-hit != 'true'
      env:
        TEXLIVE_PACKAGES_PATH: ${{ github.workspace }}/.github/texlive.packages
      run: |
        readarray -t TEXLIVE_PACKAGES < <(grep -v '^#' "$TEXLIVE_PACKAGES_PATH")
        tlmgr install "${TEXLIVE_PACKAGES[@]}"

    - name: Update TeXLive distribution
      if: steps.cache-texlive.outputs.cache-hit == 'true'
      env:
        TEXLIVE_INSTALL_PREFIX: ${{ runner.tool_cache }}/texlive
        TEXLIVE_PROFILE_PATH: ${{ github.workspace }}/.github/texlive.profile
      run: |
        PATH=$TEXLIVE_INSTALL_PREFIX/bin/x86_64-linux:$PATH
        tlmgr update --self
        tlmgr update --all
        echo "::add-path::$TEXLIVE_INSTALL_PREFIX/bin/x86_64-linux"

    - name: Cache anTeX artifacts
      uses: actions/cache@v2
      with:
        path: .antex-cache
        key: antex-cache-MEH
        restore-keys: antex-cache-

    - name: Build
      run: bundle exec jekyll build

    - name: Deploy to GitHub Pages
      uses: crazy-max/ghaction-github-pages@v2
      if: success() && github.event_name != 'schedule'
      with:
        target_branch: master
        build_dir: _site
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
