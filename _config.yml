# Custom data
title:               paolobrasolin.github.io
url:                 http://paolobrasolin.github.io
baseurl:             
author:
  name:              Paolo Brasolin
  url:               https://plus.google.com/+PaoloBrasolin
  email:             paolo.brasolin@gmail.com
analytics:
  provider:          google
  google:
    object_id:       UA-34703595-2

feedless:            true

# Assets filenames
favicon:             glyph.png
stylesheets:
  - filename: main

# Sass
sass:
  style: compressed
  sass_dir: _sass

# Markdown conversion
markdown: redcarpet
redcarpet:
  extensions: ["no_intra_emphasis", "strikethrough", "smart"]

# Default metadata
defaults:
  -
    scope:
      path: ""
    values:
      layout: "default"
  -
    scope:
      type: "posts"
    values:
      is_post: true


# posts collection
permalink: /blog/:title/
# other collections
collections:
  pages:
    output: true
    permalink: /:title/
  folia:
    output: true
    permalink: /portfolio/:title/


# See https://github.com/jekyll/jekyll/issues/2938
exclude:
  - .antex-cache/
  - vendor
  - Gemfile
  - Gemfile.lock
  - build.sh

plugins:
  - jekyll-asciidoc
  - jekyll/antex

asciidoctor:
  attributes:
    - hardbreaks!

antex:
  preamble: |
    \usepackage{mathtools, amssymb}
    \usepackage{tikz}
  template: |
    \documentclass{article}
    \pagestyle{empty}
    {{ preamble }}
    \newsavebox\snippet
    \begin{lrbox}{\snippet}{{ prepend }}{{ snippet }}{{ append }}\end{lrbox}
    \newwrite\file
    \immediate\openout\file=\jobname.yml
    \immediate\write\file{em: \the\dimexpr1em}
    \immediate\write\file{ex: \the\dimexpr1ex}
    \immediate\write\file{ht: \the\ht\snippet}
    \immediate\write\file{dp: \the\dp\snippet}
    \immediate\write\file{wd: \the\wd\snippet}
    \closeout\file
    \begin{document}\usebox{\snippet}\end{document}
  aliases:
    internal:
      priority: 1000
      # regexp: !ruby/regexp
      #   /{%\s*antex\s*(?<markup>.*?)%}(?<code>.*?){%\s*endantex\s*%}/m
    default:
      priority: 100
      # regexp: !ruby/regexp
      #   /{%\s*tex\s*(?<markup>.*?)%}(?<code>.*?){%\s*endtex\s*%}/m
    tikzpicture:
      priority: 90
      # regexp: !ruby/regexp
      #   /{%\s*tikz\s*(?<markup>.*?)%}(?<code>.*?){%\s*endtikz\s*%}/m
      options:
        prepend: '\\begin{tikzpicture}'
        append: '\\end{tikzpicture}'
        classes: [antex, tikz]
    display_math:
      priority: 20
      # regexp: !ruby/regexp /\$\$(?<code>.*?)\$\$/m
      options:
        prepend: '$\\displaystyle'
        append: $
        classes: [antex, display]
    inline_math:
      priority: 10
      # regexp: !ruby/regexp /\$(?<code>.*?)\$/
      options:
        prepend: $
        append: $
        classes: [antex, inline]
    inline_macro:
      priority: 0
      # regexp: !ruby/regexp /(?<code>\\[A-z]+)/
      options:
        classes: [antex, inline]
